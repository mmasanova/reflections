How did viewing a diff between two versions of a file help you see the bug that was introduced?
Only lines that have changed are shown so it is easier to find the bug.

How could having easy access to the entire history of a file make you a more efficient programmer
in the long term?
You can easily restore to previous version and also see what changes were made when and who made them.

What do you think are the pros and cons of manually choosing when to create a commit, like you do 
in Git, vs having versions automatically saved, like Google Docs does?
Pros - less or no unnecessary commits which makes it easier to analyse and search for differences.
Commits can be made at logical breakpoints in the code. 
Cons - commits may become too small or too big as the decision is made by the individual coding, as
it is not automated there is a danger of a huge commit if someone forgets to commit for a very long
time.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, 
while others, like Google Docs, treat each file separately?
Git has been created by a software engineer with coding projects in mind while Google Docs is 
primarily used by users for documents which are self-contained units.

How can you use the commands git log and git diff to view the history of files?
Use git log to find the commit that has changes we are interested in. Then we can use git diff
to see which lines have been added, deleted or changed in this commit in comparison to the
previous one.

How might using version control make you more confident to make changes that could break something?
You can easily search for differences between previous versions and fix any changes that
break the code. You can also restore previous versions of the code.

Now that you have your workspace set up, what do you want to try using Git for?
I want to use it for my future coding projects, it may even be useful for some documents.